# Generated by Django 4.2.23 on 2025-06-17 20:03

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario del Sistema",
                "verbose_name_plural": "Usuarios del Sistema",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ConfiguracionFacturacionElectronica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="API Key"
                    ),
                ),
                (
                    "api_secret",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="API Secret"
                    ),
                ),
                (
                    "url_base_api",
                    models.URLField(
                        blank=True,
                        max_length=255,
                        verbose_name="URL Base de la API de FE",
                    ),
                ),
                (
                    "certificado_pem",
                    models.TextField(
                        blank=True,
                        help_text="Contenido del archivo .PEM o .P12 convertido a Base64/Texto.",
                        verbose_name="Contenido del Certificado .PEM (Base64/Texto)",
                    ),
                ),
                (
                    "clave_certificado",
                    models.CharField(
                        blank=True,
                        help_text="Clave para acceder al certificado de facturación.",
                        max_length=255,
                        verbose_name="Clave del Certificado",
                    ),
                ),
                (
                    "modo_produccion",
                    models.BooleanField(
                        default=False,
                        help_text="Si está activo, las facturas se enviarán a producción, de lo contrario a entorno de pruebas.",
                        verbose_name="Modo Producción Activo",
                    ),
                ),
                (
                    "ruc_emisor",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="RUC del Emisor"
                    ),
                ),
                (
                    "nombre_emisor",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Nombre/Razón Social del Emisor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración Facturación Electrónica",
                "verbose_name_plural": "Configuraciones de Facturación Electrónica",
            },
        ),
        migrations.CreateModel(
            name="Farmacia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=200, verbose_name="Nombre de la Farmacia/Cadena"
                    ),
                ),
                (
                    "razon_social",
                    models.CharField(max_length=255, verbose_name="Razón Social"),
                ),
                (
                    "ruc",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        verbose_name="RUC/Identificación Fiscal",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Dirección Principal"
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono Principal"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=255, verbose_name="Email Principal"
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text="Sube el logo de la cadena de farmacias.",
                        null=True,
                        upload_to="logos_farmacias/",
                        verbose_name="Logo de la Farmacia",
                    ),
                ),
                (
                    "fecha_registro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Registro"
                    ),
                ),
                (
                    "configuracion_facturacion_electronica",
                    models.OneToOneField(
                        blank=True,
                        help_text="Configuración de facturación electrónica específica para esta farmacia.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.configuracionfacturacionelectronica",
                        verbose_name="Configuración FE Asociada",
                    ),
                ),
            ],
            options={
                "verbose_name": "Farmacia",
                "verbose_name_plural": "Farmacias",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Rol",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Nombre del Rol"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción del Rol"),
                ),
            ],
            options={
                "verbose_name": "Rol",
                "verbose_name_plural": "Roles",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Sucursal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=200, verbose_name="Nombre de la Sucursal"
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código corto y único para identificar la sucursal (ej. 'SUR01', 'CENTRO').",
                        max_length=10,
                        unique=True,
                        verbose_name="Código de Sucursal",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Dirección de la Sucursal",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="Teléfono de la Sucursal",
                    ),
                ),
                (
                    "fecha_apertura",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de Apertura"
                    ),
                ),
                (
                    "administrador",
                    models.ForeignKey(
                        blank=True,
                        help_text="Usuario responsable de la gestión de esta sucursal.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sucursales_administradas",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Administrador de Sucursal",
                    ),
                ),
                (
                    "farmacia",
                    models.ForeignKey(
                        help_text="La cadena de farmacias o farmacia principal a la que pertenece esta sucursal.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sucursales",
                        to="core.farmacia",
                        verbose_name="Farmacia a la que pertenece",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sucursal",
                "verbose_name_plural": "Sucursales",
                "ordering": ["farmacia__nombre", "nombre"],
                "unique_together": {("farmacia", "codigo")},
            },
        ),
        migrations.AddField(
            model_name="usuario",
            name="farmacia",
            field=models.ForeignKey(
                blank=True,
                help_text="Farmacia a la que pertenece este usuario (si aplica). Un superusuario no necesita estar asociado.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.farmacia",
                verbose_name="Farmacia Asociada",
            ),
        ),
        migrations.AddField(
            model_name="usuario",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="usuario",
            name="rol",
            field=models.ForeignKey(
                blank=True,
                help_text="Rol principal del usuario en el sistema, define sus permisos y acceso.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.rol",
                verbose_name="Rol del Usuario",
            ),
        ),
        migrations.AddField(
            model_name="usuario",
            name="sucursal",
            field=models.ForeignKey(
                blank=True,
                help_text="Sucursal a la que está asignado este usuario (si aplica). Un gerente de sucursal o vendedor se asignaría aquí.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.sucursal",
                verbose_name="Sucursal Asociada",
            ),
        ),
        migrations.AddField(
            model_name="usuario",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
