# Generated by Django 4.2.23 on 2025-06-17 20:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CategoriaProducto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Nombre de Categoría"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
            ],
            options={
                "verbose_name": "Categoría de Producto",
                "verbose_name_plural": "Categorías de Productos",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="FormaFarmaceutica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Nombre de Forma Farmacéutica",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
            ],
            options={
                "verbose_name": "Forma Farmacéutica",
                "verbose_name_plural": "Formas Farmacéuticas",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Laboratorio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Nombre del Laboratorio",
                    ),
                ),
                (
                    "direccion",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Dirección"
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=255, verbose_name="Email de Contacto"
                    ),
                ),
            ],
            options={
                "verbose_name": "Laboratorio",
                "verbose_name_plural": "Laboratorios",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="PrincipioActivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Nombre del Principio Activo",
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
            ],
            options={
                "verbose_name": "Principio Activo",
                "verbose_name_plural": "Principios Activos",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Producto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(
                        max_length=200, verbose_name="Nombre del Producto"
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(blank=True, verbose_name="Descripción Detallada"),
                ),
                (
                    "codigo_barras",
                    models.CharField(
                        blank=True,
                        help_text="Código de barras EAN o similar para el producto.",
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name="Código de Barras (EAN)",
                    ),
                ),
                (
                    "concentracion",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        verbose_name="Concentración (ej. 500mg)",
                    ),
                ),
                (
                    "presentacion_base",
                    models.CharField(
                        choices=[
                            ("caja", "Caja"),
                            ("blister", "Blíster"),
                            ("unidad", "Unidad"),
                            ("frasco", "Frasco"),
                            ("tubo", "Tubo"),
                        ],
                        help_text="Unidad en la que el producto se compra/almacena (ej. Caja, Blíster).",
                        max_length=50,
                        verbose_name="Presentación Base",
                    ),
                ),
                (
                    "cantidad_por_presentacion_base",
                    models.DecimalField(
                        decimal_places=2,
                        default=1,
                        help_text="Ej: Para una 'caja' de 100 pastillas, este valor es 100. Para un 'blister' de 10, es 10.",
                        max_digits=10,
                        verbose_name="Unidades por Presentación Base",
                    ),
                ),
                (
                    "unidad_medida",
                    models.CharField(
                        choices=[
                            ("unidad", "Unidad"),
                            ("ml", "Mililitros (ml)"),
                            ("g", "Gramos (g)"),
                            ("mg", "Miligramos (mg)"),
                            ("l", "Litros (l)"),
                        ],
                        help_text="La unidad que representa la 'cantidad_por_presentacion_base' (ej. unidad, ml, g).",
                        max_length=20,
                        verbose_name="Unidad de Medida",
                    ),
                ),
                (
                    "precio_compra_promedio",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Precio de compra promedio del producto en su presentación base.",
                        max_digits=10,
                        verbose_name="Precio de Compra Promedio",
                    ),
                ),
                (
                    "margen_ganancia_sugerido",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.2,
                        help_text="Ej: 0.20 para 20% de margen.",
                        max_digits=5,
                        verbose_name="Margen de Ganancia Sugerido (%)",
                    ),
                ),
                (
                    "aplica_receta",
                    models.BooleanField(
                        default=False,
                        help_text="Marca si el producto necesita receta para su venta.",
                        verbose_name="Requiere Receta Médica",
                    ),
                ),
                (
                    "es_controlado",
                    models.BooleanField(
                        default=False,
                        help_text="Marca si es un producto controlado (estupefacientes/psicotrópicos).",
                        verbose_name="Es Producto Controlado",
                    ),
                ),
                (
                    "imagen_producto",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="productos/",
                        verbose_name="Imagen del Producto",
                    ),
                ),
                (
                    "fecha_registro",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de Registro"
                    ),
                ),
                (
                    "categoria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventario.categoriaproducto",
                        verbose_name="Categoría",
                    ),
                ),
                (
                    "forma_farmaceutica",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventario.formafarmaceutica",
                        verbose_name="Forma Farmacéutica",
                    ),
                ),
                (
                    "laboratorio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventario.laboratorio",
                        verbose_name="Laboratorio",
                    ),
                ),
                (
                    "principio_activo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventario.principioactivo",
                        verbose_name="Principio Activo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Producto",
                "verbose_name_plural": "Productos",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="StockProducto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lote",
                    models.CharField(max_length=50, verbose_name="Número de Lote"),
                ),
                (
                    "fecha_vencimiento",
                    models.DateField(verbose_name="Fecha de Vencimiento"),
                ),
                (
                    "cantidad",
                    models.IntegerField(
                        default=0,
                        help_text="Cantidad del producto en su 'presentación base' (ej. número de cajas).",
                        verbose_name="Cantidad Disponible",
                    ),
                ),
                (
                    "ubicacion_almacen",
                    models.CharField(
                        blank=True,
                        help_text="Ej: 'Estantería A1', 'Refrigerador'.",
                        max_length=100,
                        verbose_name="Ubicación en Almacén",
                    ),
                ),
                (
                    "ultima_actualizacion",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última Actualización"
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventario.producto",
                        verbose_name="Producto",
                    ),
                ),
                (
                    "sucursal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.sucursal",
                        verbose_name="Sucursal",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock de Producto",
                "verbose_name_plural": "Stocks de Productos",
                "ordering": [
                    "sucursal__nombre",
                    "producto__nombre",
                    "fecha_vencimiento",
                ],
                "unique_together": {("producto", "sucursal", "lote")},
            },
        ),
        migrations.CreateModel(
            name="MovimientoInventario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_movimiento",
                    models.CharField(
                        choices=[
                            (
                                "ENTRADA",
                                "Entrada (Compra, Devolución Cliente, Transferencia Recibida)",
                            ),
                            (
                                "SALIDA",
                                "Salida (Venta, Merma, Transferencia Enviada, Devolución a Proveedor)",
                            ),
                            ("AJUSTE_POSITIVO", "Ajuste Positivo (Inventario Físico)"),
                            ("AJUSTE_NEGATIVO", "Ajuste Negativo (Inventario Físico)"),
                        ],
                        max_length=50,
                        verbose_name="Tipo de Movimiento",
                    ),
                ),
                (
                    "cantidad",
                    models.IntegerField(verbose_name="Cantidad del Movimiento"),
                ),
                (
                    "fecha_movimiento",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha y Hora del Movimiento"
                    ),
                ),
                (
                    "referencia_doc",
                    models.CharField(
                        blank=True,
                        help_text="ID de Venta, ID de Compra, ID de Transferencia, etc.",
                        max_length=100,
                        verbose_name="Referencia de Documento",
                    ),
                ),
                (
                    "observaciones",
                    models.TextField(
                        blank=True, verbose_name="Observaciones Adicionales"
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventario.producto",
                        verbose_name="Producto Afectado",
                    ),
                ),
                (
                    "stock_afectado",
                    models.ForeignKey(
                        blank=True,
                        help_text="Referencia al registro de StockProducto específico (lote/vencimiento) afectado.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventario.stockproducto",
                        verbose_name="Stock de Producto Afectado",
                    ),
                ),
                (
                    "sucursal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.sucursal",
                        verbose_name="Sucursal del Movimiento",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Usuario que realizó el movimiento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Movimiento de Inventario",
                "verbose_name_plural": "Movimientos de Inventario",
                "ordering": ["-fecha_movimiento"],
            },
        ),
    ]
